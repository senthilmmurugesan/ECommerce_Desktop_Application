<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABFAP4DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9+3Pyn6VAl0B3HzEY568D/A/lU03+pb6Gvjn4wfAj9qf4r/FH
        XBpnxX8O+B/A/wBpYaamn6YZL8QlAFyxxyDn+Lv0NdWFw8artKaivM4cbjXh43UHJ+R9gpfISRuX161K
        JR6gfjXwZ+xn+1n42+CHx68c/Bz456/Bql74U0xte0zxDJH5TX1gg3SMQAA2AM8D+F+Tg46bxr/wW4+C
        /h65a28P3HiDxpeKDsXRtKd45D1wHfHr2zXo1uHsdGt7KlHnWjTWzi1ozzqPEuBnS9rOXL0ae6a3R9mt
        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
        KACiiigAprDLD86KKAHUUUUAf//Z
</value>
  </data>
</root>